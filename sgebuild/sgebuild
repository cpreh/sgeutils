#!/bin/bash

CURRENT_DIR="$(dirname "$(readlink -f "$0")")"

source "${CURRENT_DIR}/common.sh"


# Setup main config

SGEBUILD_CONFIG="${SGEBUILD_CONFIG_DIR}/config.sh"

SGEBUILD_TARGET_TYPE="$1"

SGEBUILD_PARAMETERS=( "${@:2}" )

[[ -z "${SGEBUILD_TARGET_TYPE}" ]] && die "You have to provide a build type as first parameter!"

SGEBUILD_BUILD_DIR_PREFIX_DEFAULT="sgebuild_"

# Display help message

if [[ "${SGEBUILD_TARGET_TYPE}" == "--help" ]] ; then

echo "
Usage: $0 <target> [parameters]

sgebuild tries to unify the build process for different compilers, cmake
generators, build options, and so on. A collection of such build settings is
called a target here.

To force sgebuild to rerun cmake, remove the CMakeCache or set
SGEBUILD_RERUN_CMAKE.

Parameters:
  - target: The target to build.
  - parameters: Additional parameters that are passed to the build command.

sgebuilds first looks for a directory called ${SGEBUILD_PROJECT_CONFIG_PREFIX},
starting from the current working directory, going upwards (similary to how
git searches for the .git directory). The directory that contains ${SGEBUILD_PROJECT_CONFIG_PREFIX}
is stored in SGEBUILD_PROJECT_SOURCE_DIR, which is expected to contain the top-level CMakeLists.txt.
The path of the ${SGEBUILD_PROJECT_CONFIG_PREFIX} directory is stored in SGEBUILD_PROJECT_CONFIG_DIR.

sgebuild tries to source several config files, where <target> is stored in
SGEBUILD_TARGET_TYPE. The following files are sourced in the order they are listed:
  - The sgebuild config file: ${SGEBUILD_CONFIG} (mandatory).
  - The target config file: ${SGEBUILD_CONFIG_DIR}/\${SGEBUILD_TARGET_TYPE}.sh (optional).
  - The project target config file: \${SGEBUILD_PROJECT_CONFIG_DIR}/\${SGEBUILD_TARGET_TYPE}.sh (optional).
  - The project config file: \${SGEBUILD_PROJECT_CONFIG_DIR}/config.sh (mandatory).

All of the above files can be used to configure what will be passed to
invocations of cmake. What comes last overwrites what comes first, so for
example, a project target config file can overwrite settings from a target
config file.

The following variables are read from the config files:

sgebuild config (mandatory):
  SGEBUILD_CMAKE_GENERATOR:
    The default cmake generator to use (for example Ninja). See cmake -G.

  SGEBUILD_BUILD_COMMAND (mandatory):
    The default build command to use (for example ninja). Everything in
    [parameters] is passed to this command.

  SGEBUILD_BUILD_DIR_PREFIX (optional):
    The prefix sgebuild uses to name build directories which defaults to \"${SGEBUILD_BUILD_DIR_PREFIX_DEFAULT}\".

target config (optional):
  SGEBUILD_TARGET_CMAKE_SETTINGS:
    An array of cmake settings to apply on a target-wide basis, for example:

    SGEBUILD_TARGET_CMAKE_SETTINGS=(
      \"-DCMAKE_C_COMPILER=/usr/bin/gcc\"
      \"-DCMAKE_CXX_COMPILER=/usr/bin/g++\"
    )

project config (mandatory):
  SGEBUILD_PROJECT_CMAKE_SETTINGS:
    An array of cmake settings to apply on a project-wide basis, for example:

    SGEBUILD_PROJECT_CMAKE_SETTINGS=(
      \"-DENABLE_FOO=ON\"
      \"-Dfoo_DIR=\"\${HOME}/foo/build\"
    )

project target config (optional):
  SGEBUILD_PROJECT_TARGET_CMAKE_SETTINGS:
    An array of cmake settings to apply to a project and target only, for
    example:

    SGEBUILD_PROJECT_TARGET_CMAKE_SETTINGS=(
      \"-DENABLE_NARROW_STRING=OFF\"
    )

The following variables are defined by sgebuild to help you define the above
config files:

SGEBUILD_TARGET_TYPE:
  The same as <target>.

SGEBUILD_PARAMETERS:
  The same as [parameters].

SGEBUILD_PROJECT_SOURCE_DIR:
  The ancestor directory of pwd where ${SGEBUILD_PROJECT_CONFIG_PREFIX} was found.
  This directory is also expected to contain the top-level CMakeLists.txt.

SGEBUILD_PROJECT_CONFIG_DIR:
  The directory in which the project config is stored, which is set to
  "\${SGEBUILD_PROJECT_SOURCE_DIR}/${SGEBUILD_PROJECT_CONFIG_PREFIX}".

SGEBUILD_TARGET_BUILD_DIR_PREFIX:
  The build directory prefix for the current target, which is
  \"\${SGEBUILD_BUILD_DIR_PREFIX}\${SGEBUILD_TARGET_TYPE}\"

  For example, to refer to another project that is also built using sgebuild
  you could use:

  SGEBUILD_PROJECT_CMAKE_SETTINGS=(
    \"-Dfoo_DIR=\"\${HOME}/foo/\${SGEBUILD_TARGET_BUILD_DIR_PREFIX}\"
  )
"

exit

fi

# Read main config

check_file "${SGEBUILD_CONFIG}"

source "${SGEBUILD_CONFIG}"

check_variable "SGEBUILD_CMAKE_GENERATOR" "${SGEBUILD_CONFIG}"

check_variable "SGEBUILD_BUILD_COMMAND" "${SGEBUILD_CONFIG}"


# Set build variables, which can be used in the sourced files below

SGEBUILD_BUILD_DIR_PREFIX="${SGEBUILD_BUILD_DIR_PREFIX:-${SGEBUILD_BUILD_DIR_PREFIX_DEFAULT}}"

SGEBUILD_TARGET_BUILD_DIR_PREFIX="${SGEBUILD_BUILD_DIR_PREFIX}${SGEBUILD_TARGET_TYPE}"

SGEBUILD_BUILD_DIR="${SGEBUILD_PROJECT_SOURCE_DIR}/${SGEBUILD_TARGET_BUILD_DIR_PREFIX}"

SGEBUILD_PROJECT_CONFIG="${SGEBUILD_PROJECT_CONFIG_DIR}/config.sh"

SGEBUILD_TARGET_CONFIG="${SGEBUILD_CONFIG_DIR}/${SGEBUILD_TARGET_TYPE}.sh"

SGEBUILD_PROJECT_TARGET_CONFIG="${SGEBUILD_PROJECT_CONFIG_DIR}/${SGEBUILD_TARGET_TYPE}.sh"


# Check that at least one of the global target config and the per project
# target config exists

[[ ! -e "${SGEBUILD_TARGET_CONFIG}" && ! -e "${SGEBUILD_PROJECT_TARGET_CONFIG}" ]] && \
	die "Neither of ${SGEBUILD_TARGET_CONFIG} and ${SGEBUILD_PROJECT_TARGET_CONFIG} exist"


# Read the target config

[[ -e "${SGEBUILD_TARGET_CONFIG}" ]] && source "${SGEBUILD_TARGET_CONFIG}"


# Read possible additional config for this target and project

[[ -e "${SGEBUILD_PROJECT_TARGET_CONFIG}" ]] && source "${SGEBUILD_PROJECT_TARGET_CONFIG}"


# Read the project config

check_file "${SGEBUILD_PROJECT_CONFIG}"

source "${SGEBUILD_PROJECT_CONFIG}"


# Start the build process

mkdir -p "${SGEBUILD_BUILD_DIR}" || die "mkdir ${SGEBUILD_BUILD_DIR} failed"

pushd "${SGEBUILD_BUILD_DIR}" >> /dev/null

export CFLAGS="${CFLAGS} ${SGEBUILD_C_FLAGS}"

export CXXFLAGS="${CXXFLAGS} ${SGEBUILD_CXX_FLAGS}"

[[ -z ${SGEBUILD_RERUN_CMAKE} ]] && \
[[ -f CMakeCache.txt ]] || \
cmake \
	-G "${SGEBUILD_CMAKE_GENERATOR}" \
	"${SGEBUILD_TARGET_CMAKE_SETTINGS[@]}" \
	"${SGEBUILD_PROJECT_CMAKE_SETTINGS[@]}" \
	"${SGEBUILD_PROJECT_TARGET_CMAKE_SETTINGS[@]}" \
	"${SGEBUILD_PROJECT_SOURCE_DIR}" \
	|| die "cmake failed"

"${SGEBUILD_BUILD_COMMAND}" "${SGEBUILD_PARAMETERS[@]}" || die "Building failed"

popd > /dev/null
